#![allow(dead_code, non_upper_case_globals)]

pub static CHARS: &str = r#" AbCdeVghim+W-.°0123456789:;<=>?"#;

pub const SPACE   : u8 =  0;
pub const LETTER_A: u8 =  1;
pub const LETTER_b: u8 =  2;
pub const LETTER_C: u8 =  3;
pub const LETTER_d: u8 =  4;
pub const LETTER_e: u8 =  5;
pub const LETTER_V: u8 =  6;
pub const LETTER_g: u8 =  7;
pub const LETTER_h: u8 =  8;
pub const LETTER_i: u8 =  9;
pub const LETTER_m: u8 = 10;
pub const PLUS    : u8 = 11;
pub const LETTER_W: u8 = 12;
pub const MINUS   : u8 = 13;
pub const PERIOD  : u8 = 14;
pub const DEGREE  : u8 = 15;
pub const DIGIT_0 : u8 = 16;
pub const DIGIT_1 : u8 = 17;
pub const DIGIT_2 : u8 = 18;
pub const DIGIT_3 : u8 = 19;
pub const DIGIT_4 : u8 = 20;
pub const DIGIT_5 : u8 = 21;
pub const DIGIT_6 : u8 = 22;
pub const DIGIT_7 : u8 = 23;
pub const DIGIT_8 : u8 = 24;
pub const DIGIT_9 : u8 = 25;
pub const COLON   : u8 = 26;
pub const SEMICOLON: u8 = 27;
pub const LEFT_ARROW: u8 = 28;
pub const LEFT_ARROW_BAR: u8 = 29;
pub const RIGHT_ARROW: u8 = 30;
pub const RIGHT_ARROW_BAR: u8 = 31;

pub static FONT10X16: [[[u8; 10]; 32]; 2] = [[
        [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],
        [ 192, 160, 144, 136, 132, 136, 144, 160, 192,   0], // A
        [ 252, 128,  64,  64,  64,  64,  64, 128,   0,   0], // b
        [ 240,   8,   4,   4,   4,   4,   4,   8,  16,   0], // C
        [   0, 128,  64,  64,  64,  64,  64, 128, 252,   0], // d
        [   0, 128,  64,  64,  64,  64,  64, 128,   0,   0], // e
        [  28,  96, 128,   0,   0,   0, 128,  96,  28,   0], // V
        [   0, 128,  64,  64,  64,  64,  64, 128, 192,   0], // g
        [ 252, 128,  64,  64,  64,  64,  64, 128,   0,   0], // h
        [   0,   0,  64,  64, 204,   0,   0,   0,   0,   0], // i
        [ 192, 128,  64,  64, 128,  64,  64, 128,   0,   0], // m
        [   0, 128, 128, 128, 240, 128, 128, 128,   0,   0], // +
        [ 252,   0,   0,   0,   0,   0,   0,   0, 252,   0], // W
        [   0, 128, 128, 128, 128, 128, 128, 128,   0,   0], // -
        [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0], // .
        [ 112, 136,   4,   4,   4, 136, 112,   0,   0,   0], // °
        [ 240,   8,   4,   4, 132,   4,   4,   8, 240,   0], // 0
        [   0,  32,  16,   8, 252,   0,   0,   0,   0,   0], // 1
        [  16,   8,   4,   4,   4, 132,  68,  40,  16,   0], // 2
        [  16,   8,   4, 132, 132, 132, 132,  72,  48,   0], // 3
        [   0,   0, 128,  64,  32,  16,   8,   4,   0,   0], // 4
        [ 124,  68,  68,  68,  68,  68,  68, 132,   0,   0], // 5
        [ 112, 136, 132, 132, 132, 132, 132,   8,   0,   0], // 6
        [   4,   4,   4,   4,   4, 132,  68,  36,  28,   0], // 7
        [ 112, 136, 132, 132, 132, 132, 132, 136, 112,   0], // 8
        [  48,  72, 132, 132, 132, 132, 132, 136, 112,   0], // 9
        [   0,   0,   0,   0, 192, 192,   0,   0,   0,   0], // :
        [   0,   0,   0,   0, 192, 192,   0,   0,   0,   0], // ;
        [ 128, 192, 224, 240, 248, 252, 192, 192, 192, 192], // ←
        [ 192, 192, 192, 192, 192, 192, 192, 192, 192,   0], // LEFT_ARROW_BAR
        [ 192, 192, 192, 252, 248, 240, 224, 192, 128,   0], // →
        [ 192, 192, 192, 192, 192, 192, 192, 192, 192, 192], // RIGHT_ARROW_BAR
    ],
    [
        [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],
        [  31,   0,   0,   0,   0,   0,   0,   0,  31,   0], // A
        [  31,   8,  16,  16,  16,  16,  16,   8,   7,   0], // b
        [   7,   8,  16,  16,  16,  16,  16,   8,   4,   0], // C
        [   7,   8,  16,  16,  16,  16,  16,   8,  31,   0], // d
        [   5,  10,  18,  18,  18,  18,  18,   2,   1,   0], // e
        [   0,   0,   1,   6,  24,   6,   1,   0,   0,   0], // V
        [   7,   8,  16, 144, 144, 144, 144,  72,  63,   0], // g
        [  31,   0,   0,   0,   0,   0,   0,   0,  31,   0], // h
        [   0,   0,  16,  16,  31,  16,  16,   0,   0,   0], // i
        [  31,   0,   0,   0,  31,   0,   0,   0,  31,   0], // m
        [   0,   0,   0,   0,   7,   0,   0,   0,   0,   0], // +
        [  15,  16,   8,   4,   3,   4,   8,  16,  15,   0], // W
        [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0], // -
        [   0,   0,   0,   0,  24,  24,   0,   0,   0,   0], // .
        [   0,   0,   1,   1,   1,   0,   0,   0,   0,   0], // °
        [   7,   8,  16,  16,  16,  16,  16,   8,   7,   0], // 0
        [   0,  16,  16,  16,  31,  16,  16,  16,   0,   0], // 1
        [  16,  24,  20,  18,  17,  16,  16,  16,  16,   0], // 2
        [   4,   8,  16,  16,  16,  16,  16,   9,   6,   0], // 3
        [   6,   5,   4,   4,   4,   4,  31,   4,   4,   0], // 4
        [   8,  16,  16,  16,  16,  16,  16,   8,   7,   0], // 5
        [   7,   8,  16,  16,  16,  16,  16,   9,   6,   0], // 6
        [  16,   8,   4,   2,   1,   0,   0,   0,   0,   0], // 7
        [   7,   8,  16,  16,  16,  16,  16,   8,   7,   0], // 8
        [   0,   8,  16,  16,  16,  16,  16,   8,   7,   0], // 9
        [   0,   0,   0,   0,  24,  24,   0,   0,   0,   0], // :
        [   0,   0,   0,   0,  88,  56,   0,   0,   0,   0], // ;
        [   0,   1,   3,   7,  15,  31,   1,   1,   1,   1], // ←
        [   1,   1,   1,   1,   1,   1,   1,   1,   1,   0], // LEFT_ARROW_BAR
        [   1,   1,   1,  31,  15,   7,   3,   1,   0,   0], // →
        [   1,   1,   1,   1,   1,   1,   1,   1,   1,   1], // RIGHT_ARROW_BAR
    ],
];
